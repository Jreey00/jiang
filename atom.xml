<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aurora`Blog</title>
  <icon>https://www.gravatar.com/avatar/94c6bbdec1db1aac454d6450d5f271b4</icon>
  <subtitle>生活明朗，万物可爱.</subtitle>
  <link href="https://www.langxh.top/atom.xml" rel="self"/>
  
  <link href="https://www.langxh.top/"/>
  <updated>2022-09-16T17:41:20.204Z</updated>
  <id>https://www.langxh.top/</id>
  
  <author>
    <name>Aurora</name>
    <email>2933129083@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>天梯赛练习题</title>
    <link href="https://www.langxh.top/posts/220549a8.html"/>
    <id>https://www.langxh.top/posts/220549a8.html</id>
    <published>2022-09-16T16:49:23.000Z</published>
    <updated>2022-09-16T17:41:20.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PAT-天梯赛练习题"><a href="#PAT-天梯赛练习题" class="headerlink" title="PAT 天梯赛练习题"></a>PAT 天梯赛练习题</h2><blockquote><p>L1-001 Hello World</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>L1-002 打印沙漏</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="comment"># n为正整数，s为符号</span></span><br><span class="line">n, s = <span class="built_in">input</span>().split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(n)</span><br><span class="line">k = <span class="built_in">int</span>(math.sqrt((n+<span class="number">1</span>)/<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">surplus = n-<span class="number">2</span>*k**<span class="number">2</span>+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; &quot;</span>*i, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(s*(<span class="number">2</span>*(k-i)-<span class="number">1</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, k+<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; &quot;</span>*(k-i), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(s*(<span class="number">2</span>*i-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(surplus)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>L1-003 个位数统计</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">N = <span class="built_in">input</span>()</span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">input:</span></span><br><span class="line"><span class="string">    100311</span></span><br><span class="line"><span class="string">output:</span></span><br><span class="line"><span class="string">    0:2</span></span><br><span class="line"><span class="string">    1:3</span></span><br><span class="line"><span class="string">    3:1</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 将N的每一位作为字典的键，并统计其次数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> N:</span><br><span class="line">    d[i] = d.get(i, <span class="number">0</span>)+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序后输出</span></span><br><span class="line">lst = <span class="built_in">list</span>(d.items())</span><br><span class="line">lst.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> lst:</span><br><span class="line">    D, M = k</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(D, M))</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>L1-003 个位数统计</p></blockquote><div class="tip info"><p>给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C=5×(F−32)/9。题目保证输入与输出均在整型范围内。</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">F = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">C = <span class="number">5</span>*(F-<span class="number">32</span>)/<span class="number">9</span></span><br><span class="line">C = <span class="built_in">int</span>(C)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Celsius = <span class="subst">&#123;C&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>L1-006 连续因子</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment"># 最长连续因子个数</span></span><br><span class="line">maxLen = <span class="number">0</span></span><br><span class="line"><span class="comment"># 连续因子</span></span><br><span class="line">resultList = []</span><br><span class="line"><span class="comment"># 标识是否为质数</span></span><br><span class="line">isPrimeNum = <span class="literal">True</span></span><br><span class="line"><span class="comment"># 输入在一行中给出一个正整数 N（1&lt;N&lt;2^31）</span></span><br><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># 从2开始依次遍历至最大因子</span></span><br><span class="line"><span class="comment"># 输入n后，从2开始到根号N，分别求最长连续因子</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(math.sqrt(N))+<span class="number">1</span>):</span><br><span class="line">    tempNum = N</span><br><span class="line">    tempList = []</span><br><span class="line">    start = i</span><br><span class="line">    <span class="comment"># 一轮遍历</span></span><br><span class="line">    <span class="keyword">while</span> tempNum % start == <span class="number">0</span>:</span><br><span class="line">        isPrimeNum = <span class="literal">False</span></span><br><span class="line">        tempNum = tempNum//start</span><br><span class="line">        tempList.append(<span class="built_in">str</span>(start))</span><br><span class="line">        start += <span class="number">1</span></span><br><span class="line">    tempLen = start-i</span><br><span class="line">    <span class="keyword">if</span> tempLen &gt; maxLen:</span><br><span class="line">        resultList = tempList</span><br><span class="line">        maxLen = tempLen</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> isPrimeNum == <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(N)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(maxLen)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;*&quot;</span>.join(resultList))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;PAT-天梯赛练习题&quot;&gt;&lt;a href=&quot;#PAT-天梯赛练习题&quot; class=&quot;headerlink&quot; title=&quot;PAT 天梯赛练习题&quot;&gt;&lt;/a&gt;PAT 天梯赛练习题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;L1-001 Hello World&lt;/p&gt;
&lt;/</summary>
      
    
    
    
    
    <category term="PAT" scheme="https://www.langxh.top/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>Vue2学习</title>
    <link href="https://www.langxh.top/posts/a1475bed.html"/>
    <id>https://www.langxh.top/posts/a1475bed.html</id>
    <published>2022-09-16T16:00:00.000Z</published>
    <updated>2022-09-17T05:33:28.812Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="Vue2学习"><a href="#Vue2学习" class="headerlink" title="Vue2学习"></a>Vue2学习</h2><h3 id="1-Vue基础"><a href="#1-Vue基础" class="headerlink" title="1.Vue基础"></a>1.Vue基础</h3><p style='color:blue'>渐进式JavaScript 框架</p><ol><li>构造用户界面<ul><li>用vue向html页面填充数据</li></ul></li><li>框架，现成的解决方法<ul><li>语法</li><li>指令、组件、路由、Vuex</li></ul></li><li>vue特性<ul><li>数据驱动视图<ul><li>页面依赖的数据—&gt;vue监听—&gt;页面结构</li><li>页面数据发生变化，页面重新渲染</li><li></li></ul></li><li>双向数据绑定<ul><li>form表单负责采集数据，Ajax负责提交数据</li><li>在填写表时，不操作dom，自动把用户填写的内容同步带数据源中<h4 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h4>M:model—当前页面渲染时所依赖的数据源<br>V:view—页面结构（视图）<br>VM:ViewModel—Vue实例<br>:warning: 数据驱动视图和双向数据绑定的底层原理是MVVM</li></ul></li></ul></li></ol><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- view --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 导入vue 全局就有了Vue这个构造函数 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">// 实例化对象 ViewModel</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// 固定写法，表示当前vm实例要控制页面上的那个区域，接受的值是一个选择器</span></span></span><br><span class="line"><span class="language-javascript">           <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">           <span class="comment">// model 数据源</span></span></span><br><span class="line"><span class="language-javascript">           <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">               <span class="attr">username</span>: <span class="string">&#x27;lang&#x27;</span></span></span><br><span class="line"><span class="language-javascript">           &#125;,</span></span><br><span class="line"><span class="language-javascript">       &#125;)</span></span><br><span class="line"><span class="language-javascript">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="指令与过滤器"><a href="#指令与过滤器" class="headerlink" title="指令与过滤器"></a>指令与过滤器</h4><ol><li>指令 模板语法 内容渲染</li></ol><ul><li>v-text 渲染数据，但原数据会被覆盖  </li><li><code>&#123;&#123;&#125;&#125;</code>  插值表达式，占位符，用的最多</li><li>v-html 将带标签的字符串渲染html内容</li></ul><p><strong>属性绑定指令</strong></p><ul><li><code>v-bind</code> 简写<code>:</code></li></ul><p><strong>事件绑定</strong></p><ul><li><code>v-on</code> 简写<code>@</code></li></ul><p>实际属性绑定用<code>:</code>，事件绑定用<code>@</code></p><p>:warning:==事件原对象==<br>$event表示原生对象e,防止默认事件被覆盖<br>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add($event,1)&quot;</span>&gt;</span>click<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">methods:&#123;</span><br><span class="line">    add(e,n)&#123;</span><br><span class="line">        count=0;</span><br><span class="line">        this.count+=1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h4><p>阻止默认和冒泡<br><code>e.preventDefault()</code>,<code>e.stopPropagation()</code><br>在Vue中<br><code>@click.stop=&quot;&quot;</code>,<code>@click.prevnet=&quot;&quot;</code><br>语法<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;&quot;</span> @click.<span class="property">prevent</span>=<span class="string">&quot;&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;divenvnt&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;btnevnet&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h4 id="双向绑定"><a href="#双向绑定" class="headerlink" title="双向绑定"></a>双向绑定</h4><ol><li><p>源数据与表单数据互相影响<br>用于表单元素</p><ul><li><code>v-model=&quot;&quot;</code></li></ul></li><li><p>v-bind</p><ul><li><code>v-bind</code></li></ul></li></ol><h4 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h4><p><code>v-if,v-show</code><br>值为：false 时<br>v-if:动态移除元素<br><em>实际开发多用v-if</em><br>v-show:动态为元素设置 display:none</p><h4 id="循环v-for"><a href="#循环v-for" class="headerlink" title="循环v-for"></a>循环v-for</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in list&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:title</span>=<span class="string">&quot;item.name+index&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.sex&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure><p>:warning: v-for </p><ol><li>要加key的绑定，拿当前的id，需为字符串或数字,key的值不能<br>重复</li><li>key值必须唯一</li><li>不建议index，它不具有唯一性<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">            <span class="attr">list</span>: [&#123;</span><br><span class="line">                    <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">name</span>: <span class="string">&#x27;lang&#x27;</span>,</span><br><span class="line">                    <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">                    <span class="attr">name</span>: <span class="string">&#x27;zhang&#x27;</span>,</span><br><span class="line">                    <span class="attr">sex</span>: <span class="string">&#x27;女&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">                    <span class="attr">name</span>: <span class="string">&#x27;lisi&#x27;</span>,</span><br><span class="line">                    <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="过滤器filter"><a href="#过滤器filter" class="headerlink" title="过滤器filter"></a>过滤器filter</h4></li><li>局部过滤器<ul><li>在当前绑定的el下定义</li></ul></li><li>全局过滤器<ul><li>全局通过Vue.filter()定义</li></ul></li><li>如果全局过滤器与私有过滤器重名则使用私有的。</li><li>过滤器传参<br>Vue.filter(‘’,function(msg,arg1,arg2){})</li></ol><h4 id="侦听器watch"><a href="#侦听器watch" class="headerlink" title="侦听器watch"></a>侦听器watch</h4><ol><li>方法格式<ul><li>无法在刚进入页面的时候，自动触发</li><li>如果侦听器是一个对象，若对象中的属性发生了变化，不会触发侦听器</li></ul></li><li>对象格式<ul><li>可通过<strong>immediate</strong>让侦听器自动触发</li><li>可通过deep选项，让侦听器深度监听每个属性的变化</li></ul></li></ol><h4 id="计算属性computed"><a href="#计算属性computed" class="headerlink" title="计算属性computed"></a>计算属性computed</h4><ol><li>需要在computed里面定义为方法</li><li>当做普通的属性使用即可（会被挂载到vm上）</li><li>实现了代码复用</li></ol><h4 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h4><p><strong>专注以网络请求</strong><br>官方解释：<em>Axios 是一个基于 promise 的网络请求库，可以用于浏览器和 node.js</em></p><ol><li>GET请求<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="comment">// get url传参</span></span><br><span class="line">        <span class="attr">params</span>: &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>2.POST请求<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="keyword">async</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 解构</span></span><br><span class="line">        <span class="keyword">var</span> &#123;</span><br><span class="line">            data</span><br><span class="line">        &#125; = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;http://www.liulongbin.top:3006/api/post&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;ls&#x27;</span>,</span><br><span class="line">                <span class="attr">age</span>: <span class="number">90</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;())</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated"><p>如果调用某个方法返回值是promise实例，则前面可以添加await,且只能用在async修饰的方法中</p></div></li></ol><h3 id="2-Vue-cli"><a href="#2-Vue-cli" class="headerlink" title="2.Vue-cli"></a>2.Vue-cli</h3><p><em>单页面应用程序</em><br>专注开发，不在专注于webpack的配置</p><ol><li>安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure></li><li>创建项目<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create projectName</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated"><p>注意:项目名称必须为英文且均为小写，不然会报错</p></div></li></ol><h3 id="3-项目运行流程"><a href="#3-项目运行流程" class="headerlink" title="3.项目运行流程"></a>3.项目运行流程</h3><p>通过main.js把App.vue渲染到index.html指定区域中</p><h3 id="4-Vue组件"><a href="#4-Vue组件" class="headerlink" title="4.Vue组件"></a>4.Vue组件</h3><p>每个.vue组件由三部分组成</p><ul><li>template组件的模板结构</li><li>script组件的JavaScript行为</li><li>style组件样式</li></ul><h4 id="组件之间的关系"><a href="#组件之间的关系" class="headerlink" title="组件之间的关系"></a>组件之间的关系</h4><ol><li>组件在封装好之后彼此之间是相互独立的，不存在父子关系。</li><li>使用的时候才行形成父子或兄弟关系。</li></ol><h4 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h4><p>使用import导入需要的组件</p><p>在根组件App.vue中<br><code>import Test from &#39;@/components/Test.vue&#39;</code></p><div class="tip info"><p>‘@’代表scr目录</p></div><p><em>引入scr目录在webpack.config.js中的写法</em><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">webpack.<span class="property">config</span>.<span class="property">js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    <span class="attr">resolve</span>:&#123;</span><br><span class="line">        <span class="attr">alias</span>:&#123;</span><br><span class="line">          @:path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;/scr&#x27;</span>)  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>使用components结点注册组件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="attr">components</span>:&#123;</span><br><span class="line">        <span class="title class_">Test</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> 以标签形式使用刚注册的Test组件<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Test</span>&gt;</span><span class="tag">&lt;/<span class="name">Test</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="私有组件"><a href="#私有组件" class="headerlink" title="私有组件"></a>私有组件</h4><h4 id="全局组件"><a href="#全局组件" class="headerlink" title="全局组件"></a>全局组件</h4><p><strong>注册全局组件：</strong><br>在vue项目的main.js文件中，通过<code>Vue.components(&#39;myTest&#39;,Test)</code>方法，可以注册全局组件</p><h4 id="组件的props"><a href="#组件的props" class="headerlink" title="组件的props"></a>组件的props</h4><ol><li>自定义属性，使用者自定义属性，为当前组件指定初始值</li><li>在封装通用组件的时候，合理的使用props可以提高组件之间的复用性</li></ol><p>用法:<br><code>props:[&#39;init1&#39;,&#39;init2&#39;,&#39;inti2&#39;,&#39;init4&#39;,...]</code></p><div class="tip warning faa-horizontal animated-hover"><p>prop只读</p></div><h4 id="样式冲突"><a href="#样式冲突" class="headerlink" title="样式冲突"></a>样式冲突</h4><ol><li>在style中加入scoped<code>&lt;style scoped&gt;&lt;/style&gt;</code>只渲染自己的样式</li><li>父组件改变子组件的样式在元素前面加<code>/deep/</code></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/deep/<span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="vue模板"><a href="#vue模板" class="headerlink" title=".vue模板"></a>.vue模板</h4><p>最终都会被<code>vue-template-compiler</code>编译为js文件</p><h4 id="组件的生命周期"><a href="#组件的生命周期" class="headerlink" title="组件的生命周期"></a>组件的生命周期</h4><ol><li>创建一个组件的实例</li><li>生命周期<ul><li>一个组件从创建-&gt;运行-&gt;销毁</li><li>卡时间点（卡bug）<ul><li>beforeCreate-&gt;created-&gt;breforeMount-&gt;mounted</li><li>breforeUpdate-&gt;update</li><li>breforeDestory-&gt;destory<br><img src="https://cn.vuejs.org/assets/lifecycle.16e4c08e.png" alt="https://cn.vuejs.org/assets/lifecycle.16e4c08e.png"></li></ul></li></ul></li></ol><p><strong>beforeCreate</strong></p><ol><li>此阶段props,data,methods不能访问</li></ol><p><strong>created</strong></p><ol><li>此阶段可发起ajax请求</li><li>不能操作DOM,文档还没创建</li></ol><p><strong>beforeMount</strong></p><ol><li>将要将内存中编译好的HTML结构进行渲染</li><li>不能操作DOM</li></ol><p><strong>mounted</strong></p><ol><li>浏览器已包含DOM结构</li></ol><p><strong>breforeUpdate</strong></p><h4 id="组件之间的数据共享"><a href="#组件之间的数据共享" class="headerlink" title="组件之间的数据共享"></a>组件之间的数据共享</h4><ol><li>父向子<br>自定义属性</li><li>子向父<br>自定义事件</li><li>兄弟之间<br>eventBus</li></ol><ul><li>创建eventBus.js模块，并向外共享Vue实例对象。   </li><li>在数据发送方，调用<code>bus.$emit(事件名称，要发送的数据)</code>方法，触发自定义事件。</li><li>在数据接收方，调用<code>bus.$on(事件名称，事件处理函数)</code>方法，注册一个自定义事件。</li></ul><h4 id="ref引用"><a href="#ref引用" class="headerlink" title="ref引用"></a>ref引用</h4><p>在不依赖JQuery的情况下，获取DOM元素或组件的引用</p><h4 id="购物车案例"><a href="#购物车案例" class="headerlink" title="购物车案例"></a>购物车案例</h4><h3 id="5-动态组件"><a href="#5-动态组件" class="headerlink" title="5.动态组件"></a>5.动态组件</h3><p><code>&lt;component is=&quot;&quot;&gt;&lt;/component&gt;</code></p><h4 id="保证组件不会被销毁"><a href="#保证组件不会被销毁" class="headerlink" title="保证组件不会被销毁"></a>保证组件不会被销毁</h4><p>将内部组件进行缓存—不销毁</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">is</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br></pre></td></tr></table></figure><p>is:值要渲染的组件名字，是组件在components结点下的注册名称<br>include:指定哪些组件可以被缓存<br>exclude:哪些组将不需要缓存</p><div class="note primary no-icon flat"><p>组件的“注册名称”的主要应用场景是，以标签的形式，把注册好的组件，渲染和使用到页面的结构中</p></div><div class="note success no-icon flat"><p>组件声明时的name名称主要应用场景：结合<code>&lt;keep-alive&gt;</code>标签实现组件的缓存功能，以及在调试工具中看到的组件的name名称</p></div><h4 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h4><p><code>&lt;solt&gt;&lt;/solt&gt;</code></p><p>vue为<strong>组件的封装者</strong>提供的能力，允许开发者在封装组件时，把<strong>不确定的，希望有用户指定的部分</strong>定义为插槽</p><p>默认情况下，在使用组件的时候，提供的内容都会被填充到default的插槽中</p><ol><li>如果要把指定的内容填充到指定名称的插槽中，需要使用v-slot</li><li>v-slot:后面跟上插槽的名字</li><li>v-slot:不能直接用在元素上，必须在template标签上</li><li>template这个标签，他是一个占位标签，只能能起到包裹的作用，不会被渲染为任何html元素</li><li>v-slot:简写#</li><li>作用域插槽</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">msg</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">:user</span>=<span class="string">&quot;userInfo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">content</span>=<span class="string">&quot;&#123;msg,user&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h4><p>在某个组件中<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">directives</span>:&#123;</span><br><span class="line">    <span class="comment">// 定义名为color的指令，指向一个配置对象</span></span><br><span class="line">    <span class="comment">/* color:&#123;</span></span><br><span class="line"><span class="comment">      // 当指向第一次被绑定倒元素上的时候，会立即触发bind函数</span></span><br><span class="line"><span class="comment">      // el 表示color绑定的元素</span></span><br><span class="line"><span class="comment">      bind(el)&#123;</span></span><br><span class="line"><span class="comment">        el.style.color=&#x27;red&#x27;</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">       // 第一次不生效</span></span><br><span class="line"><span class="comment">      update(el, binding) &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        el.style.color = binding.value</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">    &#125; */</span></span><br><span class="line">    <span class="comment">// 当color和update里面一样时，可以用以下方式</span></span><br><span class="line">    <span class="title function_">color</span>(<span class="params">el,binding</span>)&#123;</span><br><span class="line">      el.<span class="property">style</span>.<span class="property">color</span> = binding.<span class="property">value</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h4 id="全局自定义指令"><a href="#全局自定义指令" class="headerlink" title="全局自定义指令"></a>全局自定义指令</h4><p>在mian.js文件中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局自定义指令v-color</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;color&#x27;</span>, <span class="function">(<span class="params">el, binding</span>) =&gt;</span> &#123;</span><br><span class="line">  el.<span class="property">style</span>.<span class="property">color</span> = binding.<span class="property">value</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="6-ESLint"><a href="#6-ESLint" class="headerlink" title="6.ESLint"></a>6.ESLint</h3><p><strong>可组装的JavaScript和JSX检查工具</strong><br>插件的安装</p><ul><li>ESLint</li><li>prettier</li></ul><p>配置，在settings.json文件中加入<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ESlint插件的配置</span></span><br><span class="line"><span class="attr">&quot;editor.codeActionsOnSave&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;source.fixAll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// .prettierrc文件的位置（最好在C盘Users目录下）</span></span><br><span class="line"><span class="attr">&quot;prettier.configPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Users\\ThinkPad\\.prettierrc&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;eslint.alwaysShowStatus&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;prettier.trailingComma&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;prettier.semi&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 每行文字超出此限制，强制换行</span></span><br><span class="line"><span class="attr">&quot;prettier.printWidth&quot;</span><span class="punctuation">:</span><span class="number">300</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 使用单英引号替换双引号</span></span><br><span class="line"><span class="attr">&quot;prettier.singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;prettier.arrowParens&quot;</span><span class="punctuation">:</span> <span class="string">&quot;avoid&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 设置.vue文件中，html代码的格式插件</span></span><br><span class="line"><span class="attr">&quot;vetur.format.defaultFormatter.html&quot;</span><span class="punctuation">:</span> <span class="string">&quot;js-beautify-html&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 忽略警告</span></span><br><span class="line"><span class="attr">&quot;vetur.ignoreProjectWarning&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;vetur.format.defaultFormatterOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;trailingComma&quot;</span><span class="punctuation">:</span><span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;arrowParens&quot;</span><span class="punctuation">:</span><span class="string">&quot;avoid&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;printWidth&quot;</span><span class="punctuation">:</span><span class="number">300</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;js-beautify-html&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;wrap_attributes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;[vue]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><h3 id="7-axios"><a href="#7-axios" class="headerlink" title="7.axios"></a>7.axios</h3><p><strong>全局使用</strong><br>在<code>main.js</code>中<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局使用axios</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="comment">// 全局配置axios的请求根路径</span></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="string">&#x27;http://www.xxx/xxx&#x27;</span></span><br><span class="line"><span class="comment">// 将axios挂载到Vue原型对象身上</span></span><br><span class="line"><span class="comment">// Vue.prototype.axios=axios</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$http</span> = axios</span><br><span class="line"><span class="comment">// 但是吧axios挂载到Vue的原型链上有一个缺点，不利于API接口的复用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在组将中可以直接使用，方式：</span></span><br><span class="line"> <span class="keyword">let</span> &#123; <span class="attr">data</span>: res &#125; = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">&#x27;/get&#x27;</span>)</span><br></pre></td></tr></table></figure></p><h3 id="8-路由"><a href="#8-路由" class="headerlink" title="8.路由"></a>8.路由</h3><ol><li>SPA和路由</li><li>前端路由<ul><li>Hash地址与组件之间的对应关系</li></ul></li><li>路由的工作方式<ul><li>用户点击的页面上的路由模块</li><li>当Url地址栏中的Hash值发生了变化</li><li>前端路由监听到了Hash地址的变换</li><li>前端路由把当前Hash地址对应的组件渲染到浏览器中<br>Hash——&gt;component</li></ul></li></ol><h4 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h4><ol><li>安装<br><a href="https://router.vuejs.org/zh/">官网</a><br><code>npm install vue-router@4</code></li><li>使用<br>在<code>scr</code>目录下新建<code>router/index.js</code><br><strong>index.js内容</strong><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//scr/router/index.js 路由地址</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 1、导入</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、调用Vue.use()函数，把xxx安装为Vue的插件</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"><span class="comment">// 3、实例化对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>()</span><br><span class="line"><span class="comment">// 4、实例对象共享出去</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><strong>main.js中导入并挂载</strong><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入路由模块,拿到实例对象router</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router/index.js&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  <span class="comment">// 将路由的实例对象挂在到Vue上</span></span><br><span class="line">  <span class="comment">// router:实例对象</span></span><br><span class="line">  <span class="attr">router</span>:router</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h4 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h4><ol><li>路径参数值<code>this.$route.params.id</code></li><li>通过props拿到路径参数<code>props:[&#39;id&#39;]</code></li><li>查询参数<code>this.$route.query</code></li><li>完整路径参数<code>this.$route.fullPath</code></li></ol><h4 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h4><ol><li>声明式导航（点击链接）</li><li>编程式导航（调用API）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跳转到指定hash地址，并增加一条历史记录</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>()</span><br><span class="line"><span class="comment">// 跳转到指定hash地址，并替换掉当前的历史记录</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">replace</span>()</span><br><span class="line"><span class="comment">// 后退或前进</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">go</span>()</span><br></pre></td></tr></table></figure></li></ol><h4 id="导航守卫"><a href="#导航守卫" class="headerlink" title="导航守卫"></a>导航守卫</h4><p>全局前置守卫<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 为router实例对象，声明全局前置导航守卫</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// to:将要访问路由的信息对象</span></span><br><span class="line">    <span class="comment">// from:将要离开的路由的信息对象</span></span><br><span class="line">    <span class="comment">// next()放行</span></span><br><span class="line">    <span class="comment">// console.log(to);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&#x27;/main&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// 要访问后台主页，需要判断</span></span><br><span class="line">        <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">            <span class="comment">// 若有token,证明登录，放行</span></span><br><span class="line">        <span class="keyword">if</span> (token) &#123;</span><br><span class="line">            <span class="title function_">next</span>()</span><br><span class="line">            <span class="comment">// 否则要登录</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">next</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h4 id="头条案例"><a href="#头条案例" class="headerlink" title="头条案例"></a>头条案例</h4><p><a href="https://gitee.com/lang-xiaohu/demo-toutiao">https://gitee.com/lang-xiaohu/demo-toutiao</a></p><div class="note primary no-icon flat"><p>tab示例</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tag link"><a class="link-card" title="头条案例" href="https://gitee.com/lang-xiaohu/demo-toutiao"><div class="left"><img src="https://github.com/owen0o0/getFavicon"/></div><div class="right"><p class="text">头条案例</p><p class="url">https://gitee.com/lang-xiaohu/demo-toutiao</p></div></a></div><h3 id="10-总结"><a href="#10-总结" class="headerlink" title="10.总结"></a>10.总结</h3><ol><li>了解了Vue的基本使用方法(指令、条件、循环…)</li><li>如何基于<a href="https://cli.vuejs.org/zh/guide/">Vue-cli</a>创建和开发工程化的Vue项目</li><li>能够运用组件化的开发思想，进行企业级的项目开发</li><li>能够使用指令、侦听器、插槽、生命周期、组件通讯等技术，完成业务开发</li><li>掌握在Vue项目中如何封装和使用<a href="https://www.axios-http.cn/docs/intro">axios</a>来请求后端的API接口</li><li>使用<a href="https://router.vuejs.org/zh/introduction.html">vue-router</a>实现单页面应用程序开发</li><li>在Vue项目中使用<a href="https://vant-contrib.gitee.io/vant/v2/#/zh-CN/home">Vant</a>和<a href="https://element.eleme.cn/#/zh-CN">Element-UI</a>组件库</li><li>运用<a href="https://devtools.vuejs.org/guide/installation.html">vue-devtools</a>来调试自己的Vue项目</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;Vue2学习&quot;&gt;&lt;a href=&quot;#Vue2学习&quot; class=&quot;headerlink&quot; title=&quot;Vue2学习&quot;&gt;&lt;/a&gt;Vue2学习&lt;/h2&gt;&lt;h3 id=&quot;1-Vue基础&quot;&gt;&lt;a href=&quot;#1-Vue基础&quot; class=&quot;h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>前端面试</title>
    <link href="https://www.langxh.top/posts/5d93b1d3.html"/>
    <id>https://www.langxh.top/posts/5d93b1d3.html</id>
    <published>2022-09-14T15:54:23.000Z</published>
    <updated>2022-09-15T17:10:35.749Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端经典面试题目及答案总结"><a href="#前端经典面试题目及答案总结" class="headerlink" title="前端经典面试题目及答案总结"></a>前端经典面试题目及答案总结</h2><ol><li><strong>跨域</strong></li><li><strong>水平垂直居中</strong></li><li><strong>盒模型</strong></li><li>缓存</li><li>选择器（优先级，权重）</li><li>promise</li><li><p>ref 是什么</p><p>获取dom元素</p></li><li><p>nextTick是什么</p><p>获取更新后的dom元素</p></li><li><p>scoped原理</p><p>让样式在本组件中生效，不影响其他样式</p></li><li><p>vue-router路由的方式（hash,history）</p></li><li>v-for 中的key</li><li><strong>v-if和v-show</strong></li><li>webpack/loader</li><li>css变量</li><li>事件委托</li><li>如何避免延时冲突</li></ol><ul><li>css module</li><li>css scoped</li><li>BEM</li></ul><blockquote><p>代码题</p><ol><li>深拷贝</li><li>防抖节流</li><li>原型链</li><li>自适应布局</li><li>数组去重</li><li>CSS画三角形</li><li>手写Promise</li><li>Promise实现Sleep函数<h3 id="基础流程图"><a href="#基础流程图" class="headerlink" title="基础流程图"></a>基础流程图</h3></li><li>HTML<br><img src="https://uploadfiles.nowcoder.com/images/20210110/897353_1610281693947/7E56AD06CFF2C2027D30CE7815767388" alt=""></li></ol></blockquote><ol><li><p>JavaScript<br><img src="https://uploadfiles.nowcoder.com/images/20210110/897353_1610281740675/2D1AF6DCD4B5D7926B571B1AF1FC8491" alt=""></p></li><li><p>ES6新特性<br><img src="https://uploadfiles.nowcoder.com/images/20210110/897353_1610281797240/032A48A55D202E8F6C9D1BC30B2F57BE" alt=""></p></li><li><p>浏览器相关<br><img src="https://uploadfiles.nowcoder.com/images/20210110/897353_1610281835005/469A81BF5B4A2DAAE40A3CB4239BDE3D" alt=""></p></li><li><p>框架相关<br><img src="https://uploadfiles.nowcoder.com/images/20210110/897353_1610281858340/70A285A6D33E0BF62F4D2478C76877C9" alt=""></p></li><li><p>可视化技术<br><img src="https://uploadfiles.nowcoder.com/images/20210110/897353_1610281897368/79F46307CF0483E5033528D784F2625F" alt=""></p></li></ol><blockquote><p>参考:<a href="https://www.nowcoder.com/tutorial/10061/e9570372163b4c02bfa07a40fb5353be">https://www.nowcoder.com/tutorial/10061/e9570372163b4c02bfa07a40fb5353be</a></p></blockquote><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>前端知识点汇总（灵题库）：<a href="https://www.lingtiku.com/">https://www.lingtiku.com/</a></p><p><a href="https://leetcode.cn/circle/discuss/DoJGKQ/">https://leetcode.cn/circle/discuss/DoJGKQ/</a></p><p><a href="https://blog.csdn.net/qq_41675812/article/details/126839694">https://blog.csdn.net/qq_41675812/article/details/126839694</a></p><p><a href="https://www.nowcoder.com/discuss/experience?tagId=644">https://www.nowcoder.com/discuss/experience?tagId=644</a></p><p>前端面试八股文总结: <a href="https://juejin.cn/post/7089412470581755941">https://juejin.cn/post/7089412470581755941</a></p><p>前端八股文—-常问精简版（Vue）:<a href="https://juejin.cn/post/7080483538558484516">https://juejin.cn/post/7080483538558484516</a></p><p>前端知识点汇总（语雀）：<a href="https://www.yuque.com/baiyueguang-rfnbu/tr4d0i/rz15kr">https://www.yuque.com/baiyueguang-rfnbu/tr4d0i/rz15kr</a></p><blockquote><p>面经，刷题网站</p></blockquote><ol><li>牛客:<a href="https://www.nowcoder.com/courses">https://www.nowcoder.com/courses</a></li><li>力扣:<a href="https://leetcode.cn/">https://leetcode.cn/</a></li><li>掘金:<a href="https://juejin.cn/post/7080483538558484516">https://juejin.cn/post/7080483538558484516</a></li></ol><h2 id="简历制作"><a href="#简历制作" class="headerlink" title="简历制作"></a>简历制作</h2><p>化简：<a href="https://huajian.smallpig.site/">https://huajian.smallpig.site/</a><br>锤子简历：<a href="https://www.100chui.com/resume/">https://www.100chui.com/resume/</a></p>]]></content>
    
    
    <summary type="html">收集前端面试题，知识点</summary>
    
    
    
    
    <category term="前端" scheme="https://www.langxh.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发</title>
    <link href="https://www.langxh.top/posts/8d10680e.html"/>
    <id>https://www.langxh.top/posts/8d10680e.html</id>
    <published>2022-09-10T15:54:23.000Z</published>
    <updated>2022-09-15T17:11:53.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="小程序和网页的不同点"><a href="#小程序和网页的不同点" class="headerlink" title="小程序和网页的不同点"></a>小程序和网页的不同点</h3><p>无法调用DOM，BOM 但可以调用各种API 例如：地理位置，扫码，支付</p><h3 id="申请账号"><a href="#申请账号" class="headerlink" title="申请账号"></a>申请账号</h3><p>AppID : wx4bf83b32319f6471</p><h3 id="安装开发工具devtools"><a href="#安装开发工具devtools" class="headerlink" title="安装开发工具devtools"></a>安装开发工具devtools</h3><ul><li>代码编辑调试</li><li>预览发布</li></ul><h3 id="创建和配置小程序项目"><a href="#创建和配置小程序项目" class="headerlink" title="创建和配置小程序项目"></a>创建和配置小程序项目</h3><h3 id="宿主环境"><a href="#宿主环境" class="headerlink" title="宿主环境"></a>宿主环境</h3><ul><li>程序运行所依赖的环境IOS,Android</li></ul><h4 id="微信就是小程序的宿主环境"><a href="#微信就是小程序的宿主环境" class="headerlink" title="微信就是小程序的宿主环境"></a>微信就是小程序的宿主环境</h4><ul><li>同行模型</li><li>运行机制<ul><li>启动过程</li><li>app.json</li><li>app.js 调用App()函数创建实例</li><li>渲染首页</li><li>启动完成</li></ul></li><li>组件<ul><li>视图容器<ul><li>view(div)</li><li>scroll-view() 滚动区域</li><li>swiper和swiper-item 轮播图</li><li></li></ul></li><li>内容组件<ul><li>text(span)</li><li>rich-text</li><li>button</li><li>image<ul><li>图片</li></ul></li><li>navigator<ul><li>导航</li></ul></li></ul></li></ul></li><li>API<ul><li>事件监听<ul><li>on开头，监听某些事件的触发</li><li>例如：wx.onWindowResize(function,callback)</li></ul></li><li>同步<ul><li>以Sync结尾</li><li>wx.setStorageSync(‘key’,value)向本地存储写入内容</li></ul></li><li>异步<ul><li>类似于$.ajax(options)函数，须通过success,fail,complete接受调用结果</li><li>wx.request()发起网络请求，通过success回调函数接受数据</li></ul></li></ul></li></ul><h3 id="小程序的版本"><a href="#小程序的版本" class="headerlink" title="小程序的版本"></a>小程序的版本</h3><ul><li>开发版本</li><li>体验版本</li><li>审核中的版本</li><li>线上版本</li></ul><h4 id="发布上线"><a href="#发布上线" class="headerlink" title="发布上线"></a>发布上线</h4><h3 id="WXML-模板语法"><a href="#WXML-模板语法" class="headerlink" title="WXML 模板语法"></a>WXML 模板语法</h3><ul><li>Mustache语法<ul><li>动态绑定内容：<code>&#123;&#123;&#125;&#125;</code></li><li>图片：<images src="">&lt;/image&gt;</li></ul></li><li>事件<ul><li>tap(触摸click)   bindtap/bind:tap <ul><li>事件传参：<code>data-xx=&#123;&#123;&#125;&#125;</code></li></ul></li><li>input bindinput/bind:input </li><li>change bindchange/bind:change 状态改变如checkbox</li></ul></li><li>条件渲染<ul><li>wx:if  动态创建和移除</li><li><block></block>不会被渲染</li><li><code>hidden=&#123;&#123;condition&#125;&#125;</code>  显示与隐藏  相当于display:none/block</li><li>wx:for  wx:key</li></ul></li><li><p>wxss</p><ul><li><p>rpx尺寸单位</p><ul><li><p>1px=2rpx</p></li><li><p>所有设备的宽度等分为750份</p></li></ul></li><li><p>@import样式导入</p></li><li><p>局部样式大于全局样式（权重）</p></li></ul></li></ul><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><ul><li><p>app.json</p></li><li><p>下拉刷新</p><ul><li>“enablePullDownRefresh”: true</li></ul></li><li><p>上拉触底</p><ul><li>“onReachBottomDistance”: 0</li></ul></li><li><p>tabBar</p><ul><li><p>最少两个，最多五个</p></li><li><p>顶部</p><ul><li>没图标</li></ul></li><li>底部<ul><li>有图标</li></ul></li><li>backgroundColor</li><li>slectedIconPath  选中</li><li>borderStyle</li><li>iconPath 未选中</li><li>selectedColor 选中时文本的颜色</li><li>color 默认颜色</li></ul></li></ul><h3 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;navigationBarBackgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#000000&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;navigationBarTitleText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;消息&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;backgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;light&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;enablePullDownRefresh&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br></pre></td></tr></table></figure><h3 id="网络请求数据"><a href="#网络请求数据" class="headerlink" title="网络请求数据"></a>网络请求数据</h3><p>配置request合法域名</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>:<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>跳过request合法域名校验</p><p>没有跨域和ajax请求，只是网络请求</p></blockquote><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><ul><li>配置导航栏</li><li>配置tabBar</li><li>实现轮播图</li><li>实现九宫格</li><li>实现图片布局</li></ul><h3 id="页面导航"><a href="#页面导航" class="headerlink" title="页面导航"></a>页面导航</h3><ul><li><p>声明式：navigator  </p><ul><li><p>url：必须以<code>\</code>开头</p></li><li><p>跳转到tabBar需加<code>open-type=&quot;switchTab&quot;</code></p></li><li>非tabBar页面需加<code>open-type=&quot;navigate&quot;</code></li><li>后退<code>open-type=&quot;navigateBack&quot;</code></li></ul></li><li><p>编程式：API</p><ul><li>tabBar：wx.switchTab({url=’’})</li><li>非tabBar：wx.navigateTo({url=’’})</li><li>后退：wx.navigateBack()</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;小程序和网页的不同点&quot;&gt;&lt;a href=&quot;#小程序和网页的不同点&quot; class=&quot;headerlink&quot; title=&quot;小程序和网页的不同点&quot;&gt;&lt;/a&gt;小程序和网页的不同点&lt;/h3&gt;&lt;p&gt;无法调用DOM，BOM 但可以调用各种API 例如：地理位置，扫码，支付&lt;/</summary>
      
    
    
    
    
    <category term="小程序" scheme="https://www.langxh.top/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
</feed>
